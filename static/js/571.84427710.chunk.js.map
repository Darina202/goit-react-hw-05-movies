{"version":3,"file":"static/js/571.84427710.chunk.js","mappings":"mMAEA,MAAMA,EAAU,mCAEVC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,iCAGLC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,iOAIOC,EAAcA,IAClBR,EAASS,IAAI,8CAADC,OAC6BX,GAC9CI,GAISQ,EAAeC,GACnBZ,EAASS,IAAI,wCAADC,OAAyCX,GAAW,IAClEI,EACHU,OAAQ,CACND,WAKOE,EAAkBC,GACtBf,EAASS,IAAI,UAADC,OACPK,EAAE,4BAAAL,OAA2BX,GACvCI,GAISa,EAAeD,GACnBf,EAASS,IAAI,UAADC,OACPK,EAAE,oCAAAL,OAAmCX,GAC/CI,GAISc,EAAkBF,GACtBf,EAASS,IAAI,UAADC,OACPK,EAAE,oCAAAL,OAAmCX,GAC/CI,E,2DCjDJ,SAAgB,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,wBAAwB,KAAO,uB,+BCIlH,MAsCA,EAtCgBe,KACd,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC7B,QAAEK,IAAYC,EAAAA,EAAAA,MACpB,IAAIC,EAgBJ,OAfAC,EAAAA,EAAAA,YAAU,KACYC,WAClB,IAAK,IAADC,EACFR,GAAW,GACX,MAAM,KAAES,SAAef,EAAAA,EAAAA,IAAgBS,GACvCN,EAAsB,QAAZW,EAAAC,EAAKC,eAAO,IAAAF,GAAZA,EAAcG,OAASF,EAAKC,QAAU,GAKlD,CAJE,MAAOT,GACPC,EAASD,EAAMW,QACjB,CAAC,QACCZ,GAAW,EACb,GAEFa,EAAa,GACZ,CAACV,KAEM,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQe,QAAS,EACJf,EAAOkB,KAAI,CAACC,EAAKC,KAC9BC,EAAAA,EAAAA,MAAA,MAAgBC,UAAWC,EAAAA,KAAYC,SAAA,EACrCH,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,OAAcC,SAAA,CAAC,WAASL,EAAIM,WAC3CJ,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAAA,QAAeC,SAAA,CAAC,YAAUL,EAAIO,aAFrCN,MAQXC,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAH,SAAA,CACGnB,IAASgB,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,SAAOnB,KACnBF,IAAWyB,EAAAA,EAAAA,KAAA,KAAAJ,SAAG,gBACR,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQe,QAAS,GAAIa,EAAAA,EAAAA,KAAA,MAAIN,UAAWC,EAAAA,KAAYC,SAAEf,KAAamB,EAAAA,EAAAA,KAAA,MAAIN,UAAWC,EAAAA,KAAYC,SAAC,+CAC3F,C","sources":["api/movies.js","webpack://react-homework-template/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ab290b9ac3d51cd9ec545a0b6eb96b92';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer   eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYjI5MGI5YWMzZDUxY2Q5ZWM1NDVhMGI2ZWI5NmI5MiIsInN1YiI6IjY1YzI0YTAxYTMzNjEyMDBlNjUzYTI1OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.kPtrdl2CeCwFN8Vh-UEzJf-KQ5SS8ZaqztMaE2eqoSY',\n  },\n};\n\nexport const getTrending = () => {\n  return instance.get(\n    `/trending/movie/day?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n};\n\nexport const searchMovies = query => {\n  return instance.get(`/search/movie?language=en-US&api_key=${API_KEY}`, {\n    ...options,\n    params: {\n      query,\n    },\n  });\n};\n\nexport const getMovieDetails = id => {\n  return instance.get(\n    `/movie/${id}?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n};\n\nexport const getMovieCast = id => {\n  return instance.get(\n    `/movie/${id}/credits?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n};\n\nexport const getMovieReviews = id => {\n  return instance.get(\n    `/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`,\n    options\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__BCK8P\",\"item\":\"reviews_item__boRvd\",\"author\":\"reviews_author__URyxt\",\"text\":\"reviews_text__e7pNt\"};","import { useEffect, useState } from 'react';\nimport styles from './reviews.module.css';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api/movies';\n\nconst Reviews = () => {\n  const [review, setReview] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  let item;\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const { data } = await getMovieReviews(movieId);\n        setReview(data.results?.length ? data.results : []);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  if (review?.length > 0) {\n    return (item = review.map((rev, index) => (\n      <li key={index} className={styles.item}>\n        <h3 className={styles.author}>Author: {rev.author}</h3>\n        <p className={styles.content}>Content: {rev.content}</p>\n      </li>\n    )));\n  }\n\n  return (\n    <>\n      {error && <p>Error {error}</p>}\n      {loading && <p>...Loading</p>}\n      {review?.length > 0 ? <ul className={styles.list}>{item}</ul> : <h3 className={styles.text}>We don`t have any reviews for this movie</h3>}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["API_KEY","instance","axios","baseURL","options","method","headers","accept","Authorization","getTrending","get","concat","searchMovies","query","params","getMovieDetails","id","getMovieCast","getMovieReviews","Reviews","review","setReview","useState","loading","setLoading","error","setError","movieId","useParams","item","useEffect","async","_data$results","data","results","length","message","fetchMovies","map","rev","index","_jsxs","className","styles","children","author","content","_Fragment","_jsx"],"sourceRoot":""}